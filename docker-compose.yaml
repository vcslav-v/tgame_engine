version: "3"

services:    
    bot:
      build: tgame_engine/
      container_name: bot
      command: poetry run gunicorn run:app --bind 0.0.0.0:5000 -w 1 
      environment:
        - APP_URL=
        - BOT_TOKEN=
        - DB=db
        - DB_PASSWORD=
        - MASTER_USER=
      volumes:
        - ./alembic_versions/:/usr/src/app/tgame/alembic/versions/
        - ./story.json:/usr/src/app/tgame/story.json
        - ./answ.json:/usr/src/app/tgame/answ.json
      depends_on:
        - db
      restart: always
      networks:
        intranet:
          aliases:
            - bot-app

    worker:
      build: tgame_engine/
      container_name: worker
      command: poetry run worker
      environment:
        - APP_URL=
        - BOT_TOKEN=
        - DB=db
        - DB_PASSWORD=
      volumes:
        - ./alembic_versions/:/usr/src/app/tgame/alembic/versions/
        - ./story.json:/usr/src/app/tgame/story.json
        - ./answ.json:/usr/src/app/tgame/answ.json
      depends_on:
        - bot
      restart: always
      networks:
        intranet:

    nginx:
      image: nginx:latest
      container_name: nginx
      restart: always
      volumes:
        - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        - ./nginx/dhparam:/etc/nginx/dhparam
        - ./nginx/certbot/conf/:/etc/nginx/ssl/
        - ./nginx/certbot/data:/usr/share/nginx/html/letsencrypt
      ports:
        - 80:80
        - 443:443
      networks:
        - intranet
      depends_on:
        - bot
      
    certbot:
      image: certbot/certbot:latest
      command: certonly --webroot --webroot-path=/usr/share/nginx/html/letsencrypt --email email@email.com --agree-tos --no-eff-email -d domain.ru
      depends_on:
        - nginx
      volumes:
        - ./nginx/certbot/conf/:/etc/letsencrypt
        - ./nginx/certbot/logs/:/var/log/letsencrypt
        - ./nginx/certbot/data:/usr/share/nginx/html/letsencrypt

    db:
      image: postgres:latest
      environment:
          - POSTGRES_PASSWORD=
      volumes:
        - ./db_data/:/var/lib/postgresql/data
      networks:
        - intranet
      restart: always

networks: 
  intranet: